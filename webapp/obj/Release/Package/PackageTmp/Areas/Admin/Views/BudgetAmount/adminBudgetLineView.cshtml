
@{
    ViewBag.Title = "adminBudgetLineView";
    // Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@if (Request.QueryString["success"] != null)
{
    string msg = Request.QueryString["success"].ToString();
    <div class="grid_12">
        <div class="message success">
            <p>
                @*<img src="~/Content/themes/img/accept.jpg" style="float: left; margin: 1px 7px 1px 0px;" />*@
                <label>@msg</label>
            </p>
        </div>
    </div>
}
@if (Request.QueryString["fail"] != null)
{
    string msg = Request.QueryString["fail"].ToString();
    <div class="grid_12">
        <div class="message fail">
            <p>
                @*<img src="~/Content/themes/img/accept.jpg" style="float: left; margin: 1px 7px 1px 0px;" />*@
                <label>@msg</label>
            </p>
        </div>
    </div>
}
<!-- MAIN CONTENT -->
<div id="content">
    <button class="btn btn-primary" type="button" onclick="@("location.href='" + Url.Action("adminAddBudgetLine", "BudgetAmount", new { cid=HttpContext.Current.Request.QueryString["cid"] }) + "'")">Add</button>
    @*<button class="btn btn-primary" type="button" onclick="@("location.href='/BudgetAmount/adminAddBudgetLine/?cid=" + Request.Url.Query + "'")">Add</button>*@
    <button class="btn btn-primary" type="button" onclick="@("location.href='" + Url.Action("companymanagement", "company") + "'")">Back</button>
    @*<div class="row">
            <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
                <h1 class="page-title txt-color-blueDark">
                    <i class="fa fa-table fa-fw "></i>
                    Table
                    <span>
                        >
                        Data Tables
                    </span>
                </h1>
            </div>
            <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
                <ul id="sparks" class="">
                    <li class="sparks-info">
                        <h5> My Income <span class="txt-color-blue">$47,171</span></h5>
                        <div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
                            1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
                        </div>
                    </li>
                    <li class="sparks-info">
                        <h5> Site Traffic <span class="txt-color-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp;45%</span></h5>
                        <div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
                            110,150,300,130,400,240,220,310,220,300, 270, 210
                        </div>
                    </li>
                    <li class="sparks-info">
                        <h5> Site Orders <span class="txt-color-greenDark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
                        <div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
                            110,150,300,130,400,240,220,310,220,300, 270, 210
                        </div>
                    </li>
                </ul>
            </div>
        </div>*@

    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- row -->
        <div class="row">
            @using (Html.BeginForm("adminBudgetLineView", null, FormMethod.Get))
            {
            <!-- NEW WIDGET START -->
                <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-2" data-widget-editbutton="false">
                        <!-- widget options:
                        usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                        data-widget-colorbutton="false"
                        data-widget-editbutton="false"
                        data-widget-togglebutton="false"
                        data-widget-deletebutton="false"
                        data-widget-fullscreenbutton="false"
                        data-widget-custombutton="false"
                        data-widget-collapsed="true"
                        data-widget-sortable="false"

                        -->
                        <header>
                            <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                            <h2>Budgeted Amount Management </h2>

                        </header>

                        <!-- widget div-->
                        <div>

                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->

                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            <div class="widget-body no-padding">
                                <input type="text"
                                       name="filter"
                                       value="@ViewBag.filter"
                                       class="form-control search-query inputwidth"
                                       style="display: inline"
                                       placeholder="Search by Line Item Name" />
                                <input type="text"
                                       name="cid"
                                       value="@Request.QueryString["cid"]"
                                       class="form-control search-query"
                                       style="display: none"                                       
                                      />
                                <span class="input-group-btn">
                                    <button class="btn btn-primary butpart" type="submit">Search</button>
                                </span>
                                @{
                                    var grid = new WebGrid(
                                                      canPage: true,
                                                      rowsPerPage: Model.PageSize,
                                                      canSort: true,
                                                      ajaxUpdateContainerId: "grid");

                                    grid.Bind(Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
                                    grid.Pager(WebGridPagerModes.All);

                                    @grid.GetHtml(htmlAttributes: new { id = "grid" },   // id for ajaxUpdateContainerId parameter
                fillEmptyRows: false,
                tableStyle: "table table-striped table-bordered table-hover",
                mode: WebGridPagerModes.All,
                columns: grid.Columns(
                  grid.Column("budgetType", "Budget Type"),
                  grid.Column("category", "Line Item"),
                  grid.Column("date", format: item => ((item.date == null) ? "" : item.date.ToString("MM/dd/yyyy")), header: "Date"),
                  grid.Column("reportName", "Divide by"),
                  grid.Column("budget", "Budgeted Amount"),
                  // grid.Column("createDate", "Added Date"),
                  //  grid.Column("isActive", "Status"),
                  //grid.Column("Status", format: (item) =>
                  //{
                  //    if (item.IsActive == true)
                  //    {
                  //        return Html.Raw(string.Format("<text>Active</text>"));
                  //    }
                  //    else
                  //    {
                  //        return Html.Raw(string.Format("<text>Inactive</text>"));
                  //    }
                  //}, style: "firstColumn", canSort: true)
                  grid.Column(header: "Action", canSort: false, style: "action",
                    format: @<text>
                                @if (Request.QueryString["page"] != null)
                                {
                                    @Html.Raw("<a class=\"tooltip-success\" data-rel=\"tooltip\" title=\"Edit\" data-modal='' href='/Admin/BudgetAmount/adminEditBudgetLine?id=" + item.id + "&cid=" + item.companyId + "&page=" + Request.QueryString["page"].ToString() + "' id='" + item.id + "' title='Edit'><span class=\"green\"><i class=\"ace-icon fa fa-pencil-square-o bigger-120\"></i></span></a>")
                                }
                                else
                                {
                                   @Html.Raw("<a class=\"tooltip-success\" data-rel=\"tooltip\" title=\"Edit\" data-modal='' href='/Admin/BudgetAmount/adminEditBudgetLine?id=" + item.id + "&cid=" + item.companyId + "' id='" + item.id + "' title='Edit'><span class=\"green\"><i class=\"ace-icon fa fa-pencil-square-o bigger-120\"></i></span></a>")
                                }
                    
                              <span onclick="return confirm('Are you sure you want to delete this user?')">
                                  @if (Request.QueryString["page"] != null)
                        {
                                      @Html.Raw("<a class=\"tooltip-error\" data-rel=\"tooltip\" title=\"Delete\" data-modal='' href='/Admin/BudgetAmount/Delete?id=" + item.id + "&cid=" + item.companyId + "&page=" + Request.QueryString["page"].ToString() + "' id='" + item.id + "' title='Delete'><span class=\"red\"><i class=\"ace-icon fa fa-trash-o bigger-120\"></i></span></a>")
                                  }
                                  else
                                  {
                                     @Html.Raw("<a class=\"tooltip-error\" data-rel=\"tooltip\" title=\"Delete\" data-modal='' href='/Admin/BudgetAmount/Delete?id=" + item.id + "&cid=" + item.companyId + "' id='" + item.id + "' cid='" + item.companyId + "' title='Delete'><span class=\"red\"><i class=\"ace-icon fa fa-trash-o bigger-120\"></i></span></a>")
                                  }
                        
                    </span>
                    </text>)
                ));
                                }

                                @* </div>*@

                            </div>
                            <!-- end widget content -->

                        </div>
                        <!-- end widget div -->

                    </div>
                    <!-- end widget -->

                </article>
                <!-- WIDGET END -->
                                    }
        </div>

        <!-- end row -->
        <!-- end row -->

    </section>
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->
@section pagespecific {
    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "SmartAdmin_PDF",
                           "sPdfMessage": "SmartAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })

    </script>
}



