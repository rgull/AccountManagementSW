@model SmartAdminMvc.Models.YearlyReportModel
@{
    ViewBag.Title = "CompanyBudgetReport";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<!-- MAIN CONTENT -->
<div id="content">
    <!-- row -->
    <div class="row">
        @using (Ajax.BeginForm("YearlyBudgetReport", "CompanyReport"
                    , new { pageno = 1, isAsc = true }
                    , new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "POST",
                        UpdateTargetId = "TargetId"
                    }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="col-xs-12 srchrow ">
                <div class="row center">
                    <div class="srchbar_table">

                        <label> Select Year: </label>

                        @Html.DropDownList("Year", new List<SelectListItem>()
                            {
                                new SelectListItem(){ Text= "2016", Value = "2016"},
                                new SelectListItem(){ Text= "2017", Value = "2017"},
                                new SelectListItem(){ Text= "2018", Value = "2018"},
                                new SelectListItem(){ Text= "2019", Value = "2019"},
                                new SelectListItem(){ Text= "2020", Value = "2020"},
                                new SelectListItem(){ Text= "2021", Value = "2021"},
                                new SelectListItem(){ Text= "2022", Value = "2022"},
                                new SelectListItem(){ Text= "2023", Value = "2023"},
                                new SelectListItem(){ Text= "2024", Value = "2024"},
                                new SelectListItem(){ Text= "2025", Value = "2025"},
                                new SelectListItem(){ Text= "2026", Value = "2026"},
                                new SelectListItem(){ Text= "2027", Value = "2027"},
                                new SelectListItem(){ Text= "2028", Value = "2028"},
                                new SelectListItem(){ Text= "2029", Value = "2029"},
                                new SelectListItem(){ Text= "2030", Value = "2030"}
                            }, "Select Year", new { @class = "form-control", @required = "required", id = "ddYear" })
                        <div class="gobtn_table"><button class="btn btn-primary" type="submit">Go!</button></div>
                    </div>
                </div>
            </div>
        }

    </div>
    <!-- end row -->
    <div id="TargetId"></div>
</div>


    <div>
        @*<div class="jarviswidget-editbox">
        </div>*@
        @using (Ajax.BeginForm("YearlyBudgetReport", "CompanyReport", new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            UpdateTargetId = "TargetId",
            OnSuccess = "updateSuccess"
        }))
        {
            <div class="widget-body no-padding">
                <table id="datatable_tabletools" class="table table-striped table-bordered table-hover" width="100%">
                    @if (Model.YearlyItems.Count() > 0)
                    {
                        <thead>
                            <tr>
                            </tr>
                        </thead>
                    }
                    <tbody>
                        @if (Model.YearlyItems.Count() > 0)
                        {

                            <tr>
                                <td>
                                    <span class="ReportCategoryName">
                                        Income: <lebel id="lbltotalincomwithoutdiscount">@System.Configuration.ConfigurationManager.AppSettings["CurrencySymbol"].ToString()@String.Format("{0:N2}", Model.Income)</lebel><br />
                                        Car Count: <lebel id="lblCarCounts">@Model.CarCount</lebel><br />
                                        Average ticket: <lebel id="lblavragetckit">@System.Configuration.ConfigurationManager.AppSettings["CurrencySymbol"].ToString()@String.Format("{0:N2}", Model.AverageTicketValue)</lebel>
                                    </span>
                                    <input type="hidden" Id="totalincomwithoutdiscount" value="@Model.Income" />
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    @foreach (var item in Model.YearlyItems)
                                    {
                                        <div class="jarviswidget con_table" id="wid-id-6" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-editbutton="false" data-widget-sortable="false">
                                            <header class="con_titel">
                                                <h2>@Html.DisplayFor(modelitem => item.groupName)</h2>
                                            </header>

                                            <!-- widget div-->
                                            <div>
                                                <!-- widget edit box -->
                                                <!--<div class="jarviswidget-editbox">-->
                                                    <!-- This area used as dropdown edit box -->
                                                    <!--<input class="form-control" type="text">
                                                </div>-->
                                                <!-- end widget edit box -->
                                                <!-- widget content -->
                                                <div class="widget-body">
                                                    <input type="hidden" Id="hdnCategory-@item.keyPointid" class="csscategory" value="@item.keyPointid" />
                                                    @* RGK  04-28-18 - To get Group Name, Assign IDs to labels*@
                                                    <input type="hidden" Id="hdnCategoryName-@item.keyPointid" value="@item.groupName" />
                                                    <label class="spidodivleb">
                                                        <input type="hidden" Id="KeyPointTotal-@item.keyPointid" value="@item.KeyPointTotal" />
                                                        <input type="hidden" Id="Budget1TotalIncome-@item.keyPointid" value="@item.Budget1TotalIncome" />
                                                        <input type="hidden" Id="Budget1GrossIncome-@item.keyPointid" value="@item.Budget1GrossIncome" />
                                                        <input type="hidden" Id="Percentage-@item.keyPointid" value="@item.percentage" />
                                                        <input type="hidden" Id="IsNetProfitKey-@item.keyPointid" value="@(item.isnetProfitKey == true ? 1: 0)" />
                                                        <input type="hidden" Id="groupName-@item.keyPointid" value="@item.groupName" />
                                                        <input type="hidden" Id="ActualBudget-@item.keyPointid" value="@Model.ActualIncome" />

                                                        <div id="chart_div-@item.keyPointid" style="width: 400px; height: 150px;"></div>
                                                    </label>

                                                    <div class="total_bon_bottom">

                                                        <span class="mybudget_radio">
                                                            <label>@Html.DisplayFor(modelitem => item.groupName): </label>
                                                            @if (item.KeyPointTotal < 0)
                                                            {
                                                                @String.Format("N/A")
                                                            }
                                                            else
                                                            {
                                                                @System.Configuration.ConfigurationManager.AppSettings["CurrencySymbol"].ToString()@String.Format("{0:N2}", item.KeyPointTotal)
                                                            }
                                                        </span>

                                                        <span class="budgetamount_radio">
                                                            @if (item.isBusinessDevKey)
                                                            {
                                                                <label>@String.Format("{0:0}", item.percentage) % of Net profit: </label>
                                                            }
                                                            else
                                                            {
                                                                <label>@String.Format("{0:0}", item.percentage) % of Budget1 Total Income: </label>
                                                            }

                                                            @System.Configuration.ConfigurationManager.AppSettings["CurrencySymbol"].ToString()@String.Format("{0:N2}", item.Budget1TotalIncome)
                                                        </span>

                                                        <span class="budgetamount_radio">
                                                            <label>Difference: </label>
                                                            <lebel id="Difference-@item.keyPointid">00.00 %</lebel>
                                                        </span>

                                                    </div>
                                                </div>
                                                <!-- end widget content -->
                                            </div>
                                            <!-- end widget div -->
                                        </div>
                                    }
                                </td>
                            </tr>

                            @*<tr>
                                <td>
                                    <label class="radio radio_con">
                                        <div id="ChartOfTotal" style="width: 400px; height: 200px;"></div>
                                    </label>
                                    <div class="total_bon_bottom">
                                        <span class="mybudget_total">
                                            <label>Income: </label>
                                            @System.Configuration.ConfigurationManager.AppSettings["CurrencySymbol"].ToString()<lebel id="TotalIncome"></lebel>
                                        </span>
                                        <span class="budgetamount_total">
                                            <label>Expense: </label>
                                            @System.Configuration.ConfigurationManager.AppSettings["CurrencySymbol"].ToString()<lebel id="TotalExpance"></lebel>
                                        </span>
                                        <span class="budgetamount_total">
                                            <label id="txtmargin">Profit margin: </label>
                                            <lebel id="margin"></lebel>
                                        </span>
                                    </div>
                                </td>
                            </tr>*@

                        }
                        else
                        {
                            if (!string.IsNullOrEmpty(ViewBag.year))
                            {
                                <tr>
                                    <td>
                                        <p class="alert alert-warning">
                                            <i class="fa fa-warning fa-fw fa-lg"></i><strong>!</strong>
                                            No data found for selected month.
                                            @*, Plese select date for genret report*@
                                        </p>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>


@section pagespecific {

    <script type="text/javascript">

        $(document).ready(function () {

            google.charts.load('current', { 'packages': ['gauge'] });

            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
                $("input.csscategory").each(function () {
                    var KeypointId = $(this).val();
                    //alert(KeypointId);
                    var Budget1TotalIncome = $("#Budget1TotalIncome-" + KeypointId).val();
                    var KeyPointTotal = $("#KeyPointTotal-" + KeypointId).val();
                    var Budget1GrossIncome = $("#Budget1GrossIncome-" + KeypointId).val();
                    var groupName = $("#groupName-" + KeypointId).val();
                    var DiffOfBudget1TotalIncomeAndKeyPointTotal = (parseFloat(Budget1TotalIncome - parseFloat(KeyPointTotal))).toFixed(3);
                    var ActualBudgetTotalIncome = $("#ActualBudget-" + KeypointId).val();
                    var totalIncomewithoutDiscount = $("#totalincomwithoutdiscount").val();
                    var difference = (100 - ((parseFloat(Budget1TotalIncome) / parseFloat(KeyPointTotal)) * 100));
                    var actualdifference = (100 - ((parseFloat(ActualBudgetTotalIncome) / parseFloat(KeyPointTotal)) * 100));

                    var MaxLimit = Math.round(Budget1TotalIncome) * 2;
                    var MinLimit = Math.round(Budget1TotalIncome) / 2;
                    var difference = (100 - ((parseFloat(Budget1TotalIncome) / parseFloat(KeyPointTotal)) * 100));
                    var differenceColor = "green";

                    var Percentage = $("#Percentage-" + KeypointId).val();
                    var isNetProfitKey = $("#IsNetProfitKey-" + KeypointId).val();
                    
                    var greenFromValue, greenToValue, redFromValue, redToValue, minValue, maxValue;

                    if (KeyPointTotal < 0) {
                        KeyPointTotal = 0;
                        $("#chart_div-" + KeypointId).visualization = false;
                    }

                    var data = google.visualization.arrayToDataTable([
                        ['Label', 'Value'],
                        ['', { v: Math.round(KeyPointTotal), f: DiffOfBudget1TotalIncomeAndKeyPointTotal }]
                    ]);

                    if (groupName == "SUBLET & TOWING") {
                        data = google.visualization.arrayToDataTable([
                            ['Label', 'Value'],
                            ['', Math.round(KeyPointTotal)]
                        ]);
                        difference = (parseFloat(KeyPointTotal) / parseFloat(totalIncomewithoutDiscount)) * 100;
                    }
                    if ((MinLimit > Math.round(KeyPointTotal)) || (MaxLimit < Math.round(KeyPointTotal))) {
                        if ((MinLimit > Math.round(KeyPointTotal))) {
                            MinLimit = Math.round(KeyPointTotal) - 1000;                            
                        }
                    }
                    if (groupName == "NET TOTAL") {
                        greenFromValue = Math.round(Budget1TotalIncome);
                        greenToValue = MaxLimit;
                        redFromValue = 0;
                        redToValue = Math.round(Budget1TotalIncome);
                        minValue = 0;
                        maxValue = MaxLimit;
                        difference = (parseFloat(KeyPointTotal) / parseFloat(totalIncomewithoutDiscount)) * 100; 
                        console.log(difference);
                        console.log(parseFloat(KeyPointTotal + " / " + parseFloat(totalIncomewithoutDiscount)));
                    }
                    else {
                        greenFromValue = 0;
                        greenToValue = Math.round(Budget1TotalIncome);
                        redFromValue = Math.round(Budget1TotalIncome);
                        redToValue = MaxLimit;
                        minValue = 0;
                        maxValue = MaxLimit;                       
                    }

                    if (difference > 0) {
                        differenceColor = "red";
                    }
                    else {
                        differenceColor = "green";
                    }

                    if (groupName == "SUBLET & TOWING") {
                        if (difference > 0) {
                            differenceColor = "green";
                        }
                        else {
                            differenceColor = "red";
                        }
                    }
                    if ((difference == Infinity || difference == -Infinity) || (actualdifference == Infinity || actualdifference == -Infinity)) {
                        $("#Difference-" + KeypointId).text("N/A");
                        $("#Difference-" + KeypointId).text(Math.abs(Number(difference).toFixed(2)) + " %");

                    }
                    $("#Difference-" + KeypointId).css("bold", true);

                    var options = {
                        width: 400, height: 150,
                        greenFrom: greenFromValue, greenTo: greenToValue,
                        redFrom: redFromValue, redTo: redToValue,
                        max: MaxLimit, min: minValue,
                        minorTicks: 5
                    };

                    ///
                    /// CHART HANDLING
                    ///
                    var chart = new google.visualization.Gauge(document.getElementById('chart_div-' + KeypointId));
                    chart.draw(data, options);

                    //RGK 04-14-2018   -----  Assigning color to to Value Text  -----
                    if (groupName == "NET TOTAL") {
                        if (DiffOfBudget1TotalIncomeAndKeyPointTotal > 0) {
                            $(this).parent().find(('svg text:nth-child(1)')).attr('fill', '#ff0000');  //---Red
                        }
                        else {
                            $(this).parent().find(('svg text:nth-child(1)')).attr('fill', '#00ff00');   //---Green
                        }

                    }
                    //RGK 09-10-2018. Show Difference Value for all Categories except Towing
                    //if (groupName != "SUBLET & TOWING" && groupName != "NET TOTAL") {
                    else {
                        if (KeyPointTotal > Budget1TotalIncome) {
                            $(this).parent().find(('svg text:nth-child(1)')).attr('fill', '#ff0000');
                        }
                        else {
                            $(this).parent().find(('svg text:nth-child(1)')).attr('fill', '#00ff00');
                        }
                    }

                    /// END CHART HANDLING

                    /// Display Difference Label                   

                    $("#Difference-" + KeypointId).text(Math.abs(Number(difference).toFixed(2)) + " %");
                    $("#Difference-" + KeypointId).css("color", differenceColor);
                    $("#Difference-" + KeypointId).css("bold", true);

                    $("#ActualDifference-" + KeypointId).text(Math.abs(Number(actualdifference).toFixed(2)) + " %");
                    $("#ActualDifference-" + KeypointId).css("color", differenceColor);
                    $("#ActualDifference-" + KeypointId).css("bold", true);
                   
                });
            }

        });

    </script>
}
